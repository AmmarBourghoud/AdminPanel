{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nexport var mix = function mix(one, two, mergeArrays) {\n  if (mergeArrays === void 0) {\n    mergeArrays = false;\n  }\n\n  if (!one || !two || typeof one !== \"object\" || typeof two !== \"object\") return one;\n\n  var clone = __assign({}, one);\n\n  for (var prop in two) {\n    if (two.hasOwnProperty(prop)) {\n      if (two[prop] instanceof Array && one[prop] instanceof Array) {\n        clone[prop] = mergeArrays ? one[prop].concat(two[prop]) : two[prop];\n      } else if (typeof two[prop] === \"object\" && typeof one[prop] === \"object\") {\n        clone[prop] = mix(one[prop], two[prop], mergeArrays);\n      } else {\n        clone[prop] = two[prop];\n      }\n    }\n  }\n\n  return clone;\n};","map":{"version":3,"sources":["../src/mix.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAO,IAAM,GAAG,GAAG,SAAN,GAAM,CAAU,GAAV,EAAuB,GAAvB,EAAoC,WAApC,EAAgE;AAA5B,MAAA,WAAA,KAAA,KAAA,CAAA,EAAA;AAAA,IAAA,WAAA,GAAA,KAAA;AAA4B;;AAC/E,MAAG,CAAC,GAAD,IAAQ,CAAC,GAAT,IAAgB,OAAO,GAAP,KAAe,QAA/B,IAA2C,OAAO,GAAP,KAAe,QAA7D,EACI,OAAO,GAAP;;AAEJ,MAAM,KAAK,GAAA,QAAA,CAAA,EAAA,EAAQ,GAAR,CAAX;;AACA,OAAI,IAAM,IAAV,IAAkB,GAAlB,EAAuB;AACnB,QAAG,GAAG,CAAC,cAAJ,CAAmB,IAAnB,CAAH,EAA6B;AACzB,UAAG,GAAG,CAAC,IAAD,CAAH,YAAqB,KAArB,IAA8B,GAAG,CAAC,IAAD,CAAH,YAAqB,KAAtD,EAA6D;AACzD,QAAA,KAAK,CAAC,IAAD,CAAL,GAAc,WAAW,GAAQ,GAAG,CAAC,IAAD,CAAH,CAAS,MAAT,CAAc,GAAG,CAAC,IAAD,CAAjB,CAAR,GAAoC,GAAG,CAAC,IAAD,CAAhE;AACH,OAFD,MAEO,IAAG,OAAO,GAAG,CAAC,IAAD,CAAV,KAAqB,QAArB,IAAiC,OAAO,GAAG,CAAC,IAAD,CAAV,KAAqB,QAAzD,EAAmE;AACtE,QAAA,KAAK,CAAC,IAAD,CAAL,GAAc,GAAG,CAAC,GAAG,CAAC,IAAD,CAAJ,EAAY,GAAG,CAAC,IAAD,CAAf,EAAuB,WAAvB,CAAjB;AACH,OAFM,MAEA;AACH,QAAA,KAAK,CAAC,IAAD,CAAL,GAAc,GAAG,CAAC,IAAD,CAAjB;AACH;AACJ;AACJ;;AAED,SAAO,KAAP;AACH,CAlBM","sourcesContent":["export const mix = function (one: object, two: object, mergeArrays: boolean = false) {\n    if(!one || !two || typeof one !== \"object\" || typeof two !== \"object\")\n        return one\n\n    const clone = { ...one }\n    for(const prop in two) {\n        if(two.hasOwnProperty(prop)) {\n            if(two[prop] instanceof Array && one[prop] instanceof Array) {\n                clone[prop] = mergeArrays ? [ ...one[prop], ...two[prop] ] : two[prop]\n            } else if(typeof two[prop] === \"object\" && typeof one[prop] === \"object\") {\n                clone[prop] = mix(one[prop], two[prop], mergeArrays)\n            } else {\n                clone[prop] = two[prop]\n            }\n        }\n    }\n\n    return clone\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}