{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\abourgho\\\\Desktop\\\\ETNA\\\\GPE\\\\group-690338\\\\AdminPanel\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\abourgho\\\\Desktop\\\\ETNA\\\\GPE\\\\group-690338\\\\AdminPanel\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"C:\\\\Users\\\\abourgho\\\\Desktop\\\\ETNA\\\\GPE\\\\group-690338\\\\AdminPanel\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\abourgho\\\\Desktop\\\\ETNA\\\\GPE\\\\group-690338\\\\AdminPanel\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\abourgho\\\\Desktop\\\\ETNA\\\\GPE\\\\group-690338\\\\AdminPanel\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\abourgho\\\\Desktop\\\\ETNA\\\\GPE\\\\group-690338\\\\AdminPanel\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\abourgho\\\\Desktop\\\\ETNA\\\\GPE\\\\group-690338\\\\AdminPanel\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\abourgho\\\\Desktop\\\\ETNA\\\\GPE\\\\group-690338\\\\AdminPanel\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\abourgho\\\\Desktop\\\\ETNA\\\\GPE\\\\group-690338\\\\AdminPanel\\\\src\\\\views\\\\Signals\\\\SignalsMap.js\";\nimport React, { Component } from 'react';\nimport { Button, Badge, Card, CardBody, CardHeader, Col, Row, Table } from 'reactstrap';\nimport wretch from 'wretch';\nimport Moment from 'moment';\nimport mapboxgl from 'mapbox-gl';\nimport { relative } from 'path';\nimport { MAP_TOKEN, MAP_IMAGE } from '../../api/paths/index';\nimport { loadSignalsToMap } from '../../api/functions/SignalsFunctions';\n\nvar SignalsMap = /*#__PURE__*/function (_Component) {\n  _inherits(SignalsMap, _Component);\n\n  var _super = _createSuper(SignalsMap);\n\n  function SignalsMap(props) {\n    var _this;\n\n    _classCallCheck(this, SignalsMap);\n\n    _this = _super.call(this, props);\n    _this._isMounted = false;\n    _this.state = {\n      items: {},\n      isLoading: false,\n      categoryValue: '',\n      statusValue: ''\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_this));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(SignalsMap, [{\n    key: \"handleChange\",\n    value: function handleChange(e) {\n      this.setState(_defineProperty({}, e.target.name, e.target.value));\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var _this2 = this;\n\n        var res, map;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this._isMounted = true; //  const res = await this.loadSignal();\n\n                loadSignalsToMap().then(function (response) {\n                  if (_this2._isMounted) _this2.setState({\n                    isLoading: true\n                  });\n\n                  if (response) {\n                    res = response.data;\n\n                    _this2.setState({\n                      isLoading: false,\n                      items: response\n                    });\n\n                    console.log(_this2.state);\n                  }\n                });\n                mapboxgl.accessToken = MAP_TOKEN;\n                map = new mapboxgl.Map({\n                  container: this.Mapcontainer,\n                  style: 'mapbox://styles/mapbox/streets-v9',\n                  center: [2.4159, 48.7651],\n                  zoom: 13\n                });\n                map.on(\"load\", function () {\n                  map.loadImage(MAP_IMAGE, /*#__PURE__*/function () {\n                    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(error, image) {\n                      return _regeneratorRuntime.wrap(function _callee$(_context) {\n                        while (1) {\n                          switch (_context.prev = _context.next) {\n                            case 0:\n                              if (!error) {\n                                _context.next = 2;\n                                break;\n                              }\n\n                              throw error;\n\n                            case 2:\n                              _context.next = 4;\n                              return res.forEach(function (signal) {\n                                map.addImage(signal._id, image);\n                                map.addLayer({\n                                  id: signal._id,\n                                  type: \"symbol\",\n                                  source: {\n                                    type: \"geojson\",\n                                    data: {\n                                      type: 'FeatureCollection',\n                                      features: [{\n                                        type: 'Feature',\n                                        properties: {\n                                          \"description\": \"<strong>\" + signal.name + \"</strong><p>\" + signal.description + \"</p> <p>Date: \" + Moment(signal.created_date).format('DD/MM/YY Ã  HH:mm') + \"</p> <p><a href='\" + \"#/signal/\".concat(signal._id, \"/\") + \"'><em>Voir la fiche du signalement</em></a> </p>\"\n                                        },\n                                        geometry: {\n                                          type: \"Point\",\n                                          coordinates: [signal.localization.long, signal.localization.lat]\n                                        }\n                                      }]\n                                    }\n                                  },\n                                  layout: {\n                                    \"icon-image\": signal._id,\n                                    \"icon-allow-overlap\": true\n                                  }\n                                });\n                                map.on('click', signal._id, function (e) {\n                                  var coordinates = e.features[0].geometry.coordinates.slice();\n                                  var description = e.features[0].properties.description;\n\n                                  while (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {\n                                    coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;\n                                  }\n\n                                  new mapboxgl.Popup().setLngLat(coordinates).setHTML(description).addTo(map);\n                                });\n                              });\n\n                            case 4:\n                            case \"end\":\n                              return _context.stop();\n                          }\n                        }\n                      }, _callee);\n                    }));\n\n                    return function (_x, _x2) {\n                      return _ref.apply(this, arguments);\n                    };\n                  }());\n                });\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._isMounted = false;\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function () {\n      var _componentDidUpdate = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(prevProps, prevState, snapshot) {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!(prevProps.match.params.id !== this.props.match.params.id)) {\n                  _context3.next = 3;\n                  break;\n                }\n\n                _context3.next = 3;\n                return this.loadSignal();\n\n              case 3:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function componentDidUpdate(_x3, _x4, _x5) {\n        return _componentDidUpdate.apply(this, arguments);\n      }\n\n      return componentDidUpdate;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"animated fadeIn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        lg: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(CardHeader, {\n        className: \"card card-accent-warning mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"icon-info pr-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 25\n        }\n      }), \"Localisation\"), /*#__PURE__*/React.createElement(\"div\", {\n        class: \"dropdown\",\n        style: {\n          display: 'inline-block'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"select\", {\n        className: \"form-select form-select-lg mb-3\",\n        style: {\n          marginLeft: '20%',\n          fontWeight: 'bold',\n          fontFamily: 'cursive',\n          border: '3px solid transparent'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        selected: true,\n        name: \"statusValue\",\n        value: this.state.statusValue,\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 17\n        }\n      }, \"Afficher par status de signalement\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 17\n        }\n      }, \"Ouvert\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 17\n        }\n      }, \"Termin\\xE9\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 17\n        }\n      }, \"En Attente\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 17\n        }\n      }, \"En Cours\")), /*#__PURE__*/React.createElement(\"select\", {\n        className: \"form-select form-select-sm\",\n        style: {\n          marginLeft: '15%',\n          fontWeight: 'bold',\n          fontFamily: 'cursive',\n          border: '3px solid transparent'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        selected: true,\n        name: \"categoryValue\",\n        value: this.state.categoryValue,\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 17\n        }\n      }, \"Afficher par categorie de signalement\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 17\n        }\n      }, \"Propret\\xE9\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 17\n        }\n      }, \"Panne\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 17\n        }\n      }, \"D\\xE9gradation\")))), /*#__PURE__*/React.createElement(CardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"FullMap\",\n        ref: function ref(x) {\n          _this3.Mapcontainer = x;\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 15\n        }\n      }))))));\n    }\n  }]);\n\n  return SignalsMap;\n}(Component);\n\nexport default SignalsMap;","map":{"version":3,"sources":["C:/Users/abourgho/Desktop/ETNA/GPE/group-690338/AdminPanel/src/views/Signals/SignalsMap.js"],"names":["React","Component","Button","Badge","Card","CardBody","CardHeader","Col","Row","Table","wretch","Moment","mapboxgl","relative","MAP_TOKEN","MAP_IMAGE","loadSignalsToMap","SignalsMap","props","_isMounted","state","items","isLoading","categoryValue","statusValue","handleChange","bind","handleSubmit","e","setState","target","name","value","then","response","res","data","console","log","accessToken","map","Map","container","Mapcontainer","style","center","zoom","on","loadImage","error","image","forEach","signal","addImage","_id","addLayer","id","type","source","features","properties","description","created_date","format","geometry","coordinates","localization","long","lat","layout","slice","Math","abs","lngLat","lng","Popup","setLngLat","setHTML","addTo","prevProps","prevState","snapshot","match","params","loadSignal","display","marginLeft","fontWeight","fontFamily","border","x"],"mappings":"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","sourcesContent":["\r\nimport React, { Component } from 'react';\r\nimport {Button,Badge, Card, CardBody, CardHeader, Col, Row, Table} from 'reactstrap';\r\nimport wretch from 'wretch';\r\nimport Moment from 'moment';\r\nimport mapboxgl from 'mapbox-gl'\r\nimport { relative } from 'path';\r\nimport { MAP_TOKEN, MAP_IMAGE } from '../../api/paths/index'\r\nimport { loadSignalsToMap } from '../../api/functions/SignalsFunctions'\r\n\r\n\r\nclass SignalsMap extends Component {\r\n  _isMounted = false;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      items: {},\r\n      isLoading: false,\r\n      categoryValue: '',\r\n      statusValue: ''\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleChange(e) {\r\n   this.setState({ [e.target.name]: e.target.value })\r\n }\r\n\r\n  async componentDidMount() {\r\n    this._isMounted = true;\r\n  //  const res = await this.loadSignal();\r\n    let res\r\n\r\n    loadSignalsToMap().then(response => {\r\n      if (this._isMounted)\r\n        this.setState({\r\n          isLoading: true\r\n        });\r\n        if (response) {\r\n          res = response.data\r\n          this.setState({\r\n           isLoading: false,\r\n           items: response,\r\n         });\r\n         console.log(this.state);\r\n          }\r\n      })\r\n\r\n    mapboxgl.accessToken = MAP_TOKEN;\r\n    var map = new mapboxgl.Map({\r\n      container: this.Mapcontainer,\r\n      style: 'mapbox://styles/mapbox/streets-v9',\r\n      center: [2.4159, 48.7651],\r\n      zoom: 13\r\n    });\r\n\r\n    map.on(\"load\", function () {\r\n          map.loadImage(MAP_IMAGE, async function(error, image) {\r\n          if (error) throw error;\r\n          await res.forEach(\r\n            signal => {\r\n            map.addImage(signal._id, image);\r\n            map.addLayer({\r\n              id: signal._id,\r\n              type: \"symbol\",\r\n              source: {\r\n                type: \"geojson\",\r\n                data: {\r\n                  type: 'FeatureCollection',\r\n                  features: [\r\n                    {\r\n                      type: 'Feature',\r\n                      properties: {\r\n                        \"description\":\"<strong>\"+ signal.name +\"</strong><p>\"+\r\n                        signal.description + \"</p> <p>Date: \"+ Moment(signal.created_date).format('DD/MM/YY Ã  HH:mm') +\r\n                        \"</p> <p><a href='\"+ `#/signal/${signal._id}/` +\"'><em>Voir la fiche du signalement</em></a> </p>\"\r\n                      },\r\n                      geometry: {\r\n                      type: \"Point\",\r\n                      coordinates: [signal.localization.long, signal.localization.lat]\r\n                      }\r\n                    }\r\n                  ]\r\n                }\r\n              },\r\n              layout: {\r\n                \"icon-image\": signal._id,\r\n                \"icon-allow-overlap\": true\r\n              }\r\n            });\r\n            map.on('click', signal._id, function (e) {\r\n              var coordinates = e.features[0].geometry.coordinates.slice();\r\n              var description = e.features[0].properties.description;\r\n              while (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {\r\n              coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;\r\n              }\r\n              new mapboxgl.Popup()\r\n              .setLngLat(coordinates)\r\n              .setHTML(description)\r\n              .addTo(map);\r\n              });\r\n            }\r\n          );\r\n        })\r\n      });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this._isMounted = false;\r\n  }\r\n\r\n  async componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (prevProps.match.params.id !== this.props.match.params.id)\r\n      await this.loadSignal()\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"animated fadeIn\">\r\n        <Row>\r\n          <Col lg={12}>\r\n            <Card>\r\n              <CardHeader className=\"card card-accent-warning mb-3\" >\r\n                <strong><i className=\"icon-info pr-1\"></i>Localisation</strong>\r\n                <div class=\"dropdown\" style={{display: 'inline-block'}}>\r\n                <select className=\"form-select form-select-lg mb-3\" style={{marginLeft: '20%', fontWeight: 'bold', fontFamily: 'cursive', border: '3px solid transparent'}}>\r\n                <option selected name=\"statusValue\" value={this.state.statusValue} onChange={this.handleChange}>Afficher par status de signalement</option>\r\n                <option value=\"1\">Ouvert</option>\r\n                <option value=\"2\">TerminÃ©</option>\r\n                <option value=\"3\">En Attente</option>\r\n                <option value=\"4\">En Cours</option>\r\n                </select>\r\n                <select className=\"form-select form-select-sm\" style={{marginLeft: '15%', fontWeight: 'bold', fontFamily: 'cursive', border: '3px solid transparent'}}>\r\n                <option selected name=\"categoryValue\" value={this.state.categoryValue} onChange={this.handleChange}>Afficher par categorie de signalement</option>\r\n                <option value=\"1\">PropretÃ©</option>\r\n                <option value=\"2\">Panne</option>\r\n                <option value=\"3\">DÃ©gradation</option>\r\n                </select>\r\n              </div>\r\n              </CardHeader>\r\n              <CardBody>\r\n              <div className='FullMap' ref={(x) => { this.Mapcontainer = x }}></div>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SignalsMap;\r\n"]},"metadata":{},"sourceType":"module"}