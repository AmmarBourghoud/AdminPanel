{"ast":null,"code":"var _this = this;\n\nimport axios from 'axios';\nimport { BASE_PATH, SIGNAL } from '../paths/index';\nexport var loadSignals = function loadSignals(page, isMounted) {\n  if (isMounted) _this.setState({\n    isLoading: true\n  });\n  axios.get(BASE_PATH + SIGNAL, {\n    headers: {\n      Authorization: \"Bearer \".concat(axios.defaults.headers.common.Bearer)\n    }\n  }).then(function (response) {\n    console.log(response);\n\n    if (isMounted) {\n      _this.setState({\n        isLoading: false,\n        items: response\n      });\n    }\n  }).catch(function (err) {\n    console.log(err);\n  });\n};","map":{"version":3,"sources":["C:/Users/abourgho/Desktop/ETNA/GPE/group-690338/AdminPanel/src/api/functions/SignalsFunctions.js"],"names":["axios","BASE_PATH","SIGNAL","loadSignals","page","isMounted","setState","isLoading","get","headers","Authorization","defaults","common","Bearer","then","response","console","log","items","catch","err"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,MAApB,QAAkC,gBAAlC;AAEA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,IAAD,EAAOC,SAAP,EAAqB;AAC9C,MAAIA,SAAJ,EACE,KAAI,CAACC,QAAL,CAAc;AACZC,IAAAA,SAAS,EAAE;AADC,GAAd;AAGAP,EAAAA,KAAK,CACHQ,GADF,CACMP,SAAS,GAAGC,MADlB,EAC0B;AACzBO,IAAAA,OAAO,EAAE;AAAEC,MAAAA,aAAa,mBAAYV,KAAK,CAACW,QAAN,CAAeF,OAAf,CAAuBG,MAAvB,CAA8BC,MAA1C;AAAf;AADgB,GAD1B,EAIEC,IAJF,CAIO,UAAAC,QAAQ,EAAI;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;;AACD,QAAIV,SAAJ,EAAe;AACb,MAAA,KAAI,CAACC,QAAL,CAAc;AACXC,QAAAA,SAAS,EAAE,KADA;AAEXW,QAAAA,KAAK,EAAEH;AAFI,OAAd;AAIE;AACD,GAZL,EAaGI,KAbH,CAaS,UAAAC,GAAG,EAAI;AACTJ,IAAAA,OAAO,CAACC,GAAR,CAAYG,GAAZ;AACJ,GAfH;AAgBH,CArBM","sourcesContent":["import axios from 'axios'\r\nimport { BASE_PATH, SIGNAL } from '../paths/index'\r\n\r\nexport const loadSignals = (page, isMounted) => {\r\n  if (isMounted)\r\n    this.setState({\r\n      isLoading: true\r\n    });\r\n    axios\r\n     .get(BASE_PATH + SIGNAL, {\r\n     headers: { Authorization: `Bearer ${axios.defaults.headers.common.Bearer}` }\r\n    })\r\n     .then(response => {\r\n       console.log(response);\r\n      if (isMounted) {\r\n        this.setState({\r\n           isLoading: false,\r\n           items: response\r\n         })\r\n         }\r\n        })\r\n      .catch(err => {\r\n           console.log(err)\r\n      })\r\n}\r\n"]},"metadata":{},"sourceType":"module"}